name: GitOps-Pipeline with ArgoCD

on: 
    push:
        branches: 
            - release
        paths-ignore:
            - 'manifest/**' # ignore changes to manifest files to prevent loop
env: 
    PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
    ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
    ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
    GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
    GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
    
jobs:
    build:
        runs-on: ubuntu-latest
        steps: 
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                fetch-depth: 0
                
            - name: Set up NodeJS
              uses: actions/setup-node@v3
              with: 
                node-version: '14'

            - name: Install NodeJS dependencies
              run: npm install

            - name: Build Docker Image
              run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }} .

            - name: Scan Docker Image with Trivy
              run: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}

            - name: Log in to DockerHub
              run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            
            - name: Push Docker image to DockerHub
              run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }} 

    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps: 
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                repository: onkarkulkarni545/config_files
                ref: release
                token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                fetch-depth: 0  # get all history of all branches and tags

                    

            -  name: Update deployment.yaml with newly built image
               run: |
                git config user.name "${{ secrets.GIT_USERNAME }}"
                git config user.email "${{ secrets.GIT_EMAIL }}"
                git fetch origin
                git checkout release
                git pull origin release
                sed -i "s+${{ secrets.DOCKERHUB_USERNAME }}/my-app.*+${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}+g" manifest/deployment.yaml

            - name: Synchronize, Commit, and Push Updated deployment.yaml
              run: |
               git config user.name "${{ env.GIT_USERNAME }}"
               git config user.email "${{ env.GIT_EMAIL }}"
    
               if ! git diff --cached --quiet; then
               git commit -m "Update my-app image to ${{ github.sha }}"
      
               git pull --rebase
      
    
               git push
                else
                  echo "No changes to commit in manifest/deployment.yaml. Skipping push."
                  exit 0
                fi
           



           
